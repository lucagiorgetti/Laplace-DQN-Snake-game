[ Info: === Hyperparameters ===
[ Info: targetupdaterate => 1000
[ Info: replaybufferbatch_size => 5
[ Info: learning_rate => 0.0005
[ Info: discount => 0.99
[ Info: eating_reward => 1.0
[ Info: epsilon_decay => 1.0e-5
[ Info: n_batches => 1000
[ Info: epsilon_start => 1.0
[ Info: suicide_penalty => -1.0
[ Info: replaybuffercapacity => 1000
[ Info: state_size => 10
[ Info: epsilon_end => 0.05
[ Info: maledivivere => -0.1
┌ Info: ############################## FILLING THE BUFFER
└ ###############################
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (7,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(5, 7)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (5,7) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 3)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (7,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(5, 7)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
┌ Info: ############################## BUFFER FULL
└ ######################################
┌ Info: ############################## START TRAINING
└ ###############################
┌ Debug: ######################### BATCH 0
│ ###################################
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:508
┌ Debug: Actions_selected:
│   actions =
│    5-element Vector{Int64}:
│     2
│     2
│     3
│     1
│     3
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:509
┌ Debug: Q_pred:
│   q_pred =
│    3×5 Matrix{Float32}:
│     -0.0336779  -0.0205723   -0.0148564  -0.0201379   -0.0287063
│      0.0365873  -0.00703123   0.0341104   0.0339594    0.032426
│      0.0411363   0.00805488   0.0159386  -0.00680172   0.000316116
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:510
┌ Debug: Shape Q-pred
│   q_pred_shape = (3, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:511
┌ Debug: Shape Q-pred-selected
│   q_pred_selected_shape = (5,)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:512
┌ Debug: Shape Q-target
│   q_target_shape = (5,)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:513
┌ Debug: Qpredselected:
│   q_pred_selected =
│    5-element Vector{Float32}:
│      0.036587257
│     -0.007031228
│      0.015938612
│     -0.020137899
│      0.00031611603
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:514
┌ Debug: Actionselectedincartesianindex
│   a_array =
│    5-element Vector{CartesianIndex{2}}:
│     CartesianIndex(0, -1)
│     CartesianIndex(0, -1)
│     CartesianIndex(0, 1)
│     CartesianIndex(-1, 0)
│     CartesianIndex(0, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:515
┌ Debug: States
│   states =
│    10×10×1×5 Array{Float32, 4}:
│    [:, :, 1, 1] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   1.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 2] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 3] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 4] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   1.0   1.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 5] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:516
┌ Debug: Next_states
│   next_states =
│    10×10×1×5 Array{Float32, 4}:
│    [:, :, 1, 1] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 2] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 3] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 4] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   1.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 5] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:517
[ Info: Batch 0 | Target network updated.
[ Info: Batch 5 | Game reset due to loss.
[ Info: Batch 15 | Game reset due to loss.
[ Info: Batch 26 | Game reset due to loss.
[ Info: Batch 42 | Game reset due to loss.
[ Info: Batch 47 | Game reset due to loss.
[ Info: Batch 50 | Game reset due to loss.
[ Info: Batch 67 | Game reset due to loss.
[ Info: Batch 95 | Game reset due to loss.
[ Info: Batch 96 | Game reset due to loss.
[ Info: Batch 97 | Game reset due to loss.
[ Info: Batch 98 | Game reset due to loss.
[ Info: Batch 101 | Game reset due to loss.
[ Info: Batch 103 | Game reset due to loss.
[ Info: Batch 118 | Game reset due to loss.
[ Info: Batch 120 | Game reset due to loss.
[ Info: Batch 121 | Game reset due to loss.
[ Info: Batch 132 | Game reset due to loss.
[ Info: Batch 135 | Game reset due to loss.
[ Info: Batch 136 | Game reset due to loss.
[ Info: Batch 142 | Game reset due to loss.
[ Info: Batch 143 | Game reset due to loss.
[ Info: Batch 144 | Game reset due to loss.
[ Info: Batch 146 | Game reset due to loss.
[ Info: Batch 161 | Game reset due to loss.
[ Info: Batch 163 | Game reset due to loss.
[ Info: Batch 164 | Game reset due to loss.
[ Info: Batch 165 | Game reset due to loss.
[ Info: Batch 166 | Game reset due to loss.
[ Info: Batch 167 | Game reset due to loss.
[ Info: Batch 168 | Game reset due to loss.
[ Info: Batch 170 | Game reset due to loss.
[ Info: Batch 177 | Game reset due to loss.
[ Info: Batch 184 | Game reset due to loss.
[ Info: Batch 185 | Game reset due to loss.
[ Info: Batch 189 | Game reset due to loss.
[ Info: Batch 190 | Game reset due to loss.
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
[ Info: Batch 206 | Game reset due to loss.
[ Info: Batch 220 | Game reset due to loss.
[ Info: Batch 221 | Game reset due to loss.
[ Info: Batch 222 | Game reset due to loss.
[ Info: Batch 223 | Game reset due to loss.
[ Info: Batch 224 | Game reset due to loss.
[ Info: Batch 225 | Game reset due to loss.
[ Info: Batch 227 | Game reset due to loss.
[ Info: Batch 231 | Game reset due to loss.
[ Info: Batch 233 | Game reset due to loss.
[ Info: Batch 234 | Game reset due to loss.
[ Info: Batch 235 | Game reset due to loss.
[ Info: Batch 236 | Game reset due to loss.
[ Info: Batch 241 | Game reset due to loss.
[ Info: Batch 243 | Game reset due to loss.
[ Info: Batch 249 | Game reset due to loss.
[ Info: Batch 252 | Game reset due to loss.
[ Info: Batch 265 | Game reset due to loss.
[ Info: Batch 270 | Game reset due to loss.
[ Info: Batch 283 | Game reset due to loss.
[ Info: Batch 300 | Game reset due to loss.
[ Info: Batch 301 | Game reset due to loss.
[ Info: Batch 302 | Game reset due to loss.
[ Info: Batch 303 | Game reset due to loss.
[ Info: Batch 311 | Game reset due to loss.
[ Info: Batch 329 | Game reset due to loss.
[ Info: Batch 345 | Game reset due to loss.
[ Info: Batch 348 | Game reset due to loss.
[ Info: Batch 357 | Game reset due to loss.
[ Info: Batch 359 | Game reset due to loss.
[ Info: Batch 385 | Game reset due to loss.
[ Info: Batch 386 | Game reset due to loss.
[ Info: Batch 387 | Game reset due to loss.
[ Info: Batch 390 | Game reset due to loss.
[ Info: Batch 400 | Game reset due to loss.
[ Info: Batch 403 | Game reset due to loss.
[ Info: Batch 406 | Game reset due to loss.
[ Info: Batch 407 | Game reset due to loss.
[ Info: Batch 415 | Game reset due to loss.
[ Info: Batch 416 | Game reset due to loss.
[ Info: Batch 433 | Game reset due to loss.
[ Info: Batch 434 | Game reset due to loss.
[ Info: Batch 438 | Game reset due to loss.
[ Info: Batch 447 | Game reset due to loss.
[ Info: Batch 449 | Game reset due to loss.
[ Info: Batch 450 | Game reset due to loss.
[ Info: Batch 452 | Game reset due to loss.
[ Info: Batch 457 | Game reset due to loss.
[ Info: Batch 458 | Game reset due to loss.
[ Info: Batch 479 | Game reset due to loss.
[ Info: Batch 480 | Game reset due to loss.
[ Info: Batch 490 | Game reset due to loss.
[ Info: Batch 494 | Game reset due to loss.
┌ Debug: ######################### BATCH 500
│ ###################################
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:508
┌ Debug: Actions_selected:
│   actions =
│    5-element Vector{Int64}:
│     1
│     3
│     1
│     3
│     2
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:509
┌ Debug: Q_pred:
│   q_pred =
│    3×5 Matrix{Float32}:
│     -0.25699   -0.250588  -0.53051   -0.384515  -0.342179
│     -0.283287  -0.194537  -0.974778  -1.04146   -0.282341
│     -0.36548   -0.209305  -0.457001  -0.36128   -0.436812
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:510
┌ Debug: Shape Q-pred
│   q_pred_shape = (3, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:511
┌ Debug: Shape Q-pred-selected
│   q_pred_selected_shape = (5,)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:512
┌ Debug: Shape Q-target
│   q_target_shape = (5,)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:513
┌ Debug: Qpredselected:
│   q_pred_selected =
│    5-element Vector{Float32}:
│     -0.2569898
│     -0.20930502
│     -0.5305097
│     -0.3612803
│     -0.28234124
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:514
┌ Debug: Actionselectedincartesianindex
│   a_array =
│    5-element Vector{CartesianIndex{2}}:
│     CartesianIndex(-1, 0)
│     CartesianIndex(0, 1)
│     CartesianIndex(-1, 0)
│     CartesianIndex(0, 1)
│     CartesianIndex(1, 0)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:515
┌ Debug: States
│   states =
│    10×10×1×5 Array{Float32, 4}:
│    [:, :, 1, 1] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 2] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 3] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 4] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 5] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:516
┌ Debug: Next_states
│   next_states =
│    10×10×1×5 Array{Float32, 4}:
│    [:, :, 1, 1] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 2] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 3] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 4] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 5] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:517
[ Info: Batch 505 | Game reset due to loss.
[ Info: Batch 506 | Game reset due to loss.
[ Info: Batch 507 | Game reset due to loss.
[ Info: Batch 509 | Game reset due to loss.
[ Info: Batch 510 | Game reset due to loss.
[ Info: Batch 511 | Game reset due to loss.
[ Info: Batch 515 | Game reset due to loss.
[ Info: Batch 516 | Game reset due to loss.
[ Info: Batch 527 | Game reset due to loss.
[ Info: Batch 528 | Game reset due to loss.
[ Info: Batch 529 | Game reset due to loss.
[ Info: Batch 531 | Game reset due to loss.
[ Info: Batch 533 | Game reset due to loss.
[ Info: Batch 550 | Game reset due to loss.
[ Info: Batch 564 | Game reset due to loss.
[ Info: Batch 572 | Game reset due to loss.
[ Info: Batch 573 | Game reset due to loss.
[ Info: Batch 575 | Game reset due to loss.
[ Info: Batch 590 | Game reset due to loss.
[ Info: Batch 591 | Game reset due to loss.
[ Info: Batch 592 | Game reset due to loss.
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
[ Info: Batch 614 | Game reset due to loss.
[ Info: Batch 627 | Game reset due to loss.
[ Info: Batch 631 | Game reset due to loss.
[ Info: Batch 632 | Game reset due to loss.
[ Info: Batch 639 | Game reset due to loss.
[ Info: Batch 640 | Game reset due to loss.
[ Info: Batch 641 | Game reset due to loss.
[ Info: Batch 644 | Game reset due to loss.
[ Info: Batch 648 | Game reset due to loss.
[ Info: Batch 664 | Game reset due to loss.
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.20712605
│     -0.13862947
│     -0.13860364
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
[ Info: Batch 676 | Game reset due to loss.
[ Info: Batch 683 | Game reset due to loss.
[ Info: Batch 685 | Game reset due to loss.
[ Info: Batch 686 | Game reset due to loss.
[ Info: Batch 687 | Game reset due to loss.
[ Info: Batch 688 | Game reset due to loss.
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
[ Info: Batch 721 | Game reset due to loss.
[ Info: Batch 726 | Game reset due to loss.
[ Info: Batch 731 | Game reset due to loss.
[ Info: Batch 739 | Game reset due to loss.
[ Info: Batch 747 | Game reset due to loss.
[ Info: Batch 757 | Game reset due to loss.
[ Info: Batch 758 | Game reset due to loss.
[ Info: Batch 759 | Game reset due to loss.
[ Info: Batch 767 | Game reset due to loss.
[ Info: Batch 770 | Game reset due to loss.
[ Info: Batch 771 | Game reset due to loss.
[ Info: Batch 775 | Game reset due to loss.
[ Info: Batch 786 | Game reset due to loss.
[ Info: Batch 788 | Game reset due to loss.
[ Info: Batch 794 | Game reset due to loss.
[ Info: Batch 807 | Game reset due to loss.
┌ Debug: food in (4,5) eaten!
│   reward = 1.0f0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:95
┌ Debug: Placing food at CartesianIndex(7, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:60
[ Info: Batch 824 | Game reset due to loss.
[ Info: Batch 825 | Game reset due to loss.
[ Info: Batch 826 | Game reset due to loss.
[ Info: Batch 827 | Game reset due to loss.
[ Info: Batch 837 | Game reset due to loss.
[ Info: Batch 838 | Game reset due to loss.
[ Info: Batch 858 | Game reset due to loss.
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.38439214
│     -0.36006308
│     -0.74759066
│   max_idx = CartesianIndex(2, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
[ Info: Batch 884 | Game reset due to loss.
[ Info: Batch 885 | Game reset due to loss.
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.33674532
│     -0.27598435
│     -0.24383265
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
[ Info: Batch 897 | Game reset due to loss.
[ Info: Batch 898 | Game reset due to loss.
[ Info: Batch 934 | Game reset due to loss.
[ Info: Batch 945 | Game reset due to loss.
[ Info: Batch 948 | Game reset due to loss.
[ Info: Batch 950 | Game reset due to loss.
[ Info: Batch 952 | Game reset due to loss.
[ Info: Batch 959 | Game reset due to loss.
[ Info: Batch 974 | Game reset due to loss.
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.30341807
│     -0.2632809
│     -0.28330985
│   max_idx = CartesianIndex(2, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
[ Info: Batch 982 | Game reset due to loss.
[ Info: Batch 990 | Game reset due to loss.
┌ Debug: ######################### BATCH 1000
│ ###################################
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:508
┌ Debug: Actions_selected:
│   actions =
│    5-element Vector{Int64}:
│     1
│     2
│     2
│     3
│     2
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:509
┌ Debug: Q_pred:
│   q_pred =
│    3×5 Matrix{Float32}:
│     -0.381999  -0.362068  -0.456393  -0.295072  -0.454125
│     -0.215436  -1.01945   -0.194846  -0.221702  -0.192337
│     -0.228436  -0.283838  -0.547122  -0.223689  -0.433338
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:510
┌ Debug: Shape Q-pred
│   q_pred_shape = (3, 5)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:511
┌ Debug: Shape Q-pred-selected
│   q_pred_selected_shape = (5,)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:512
┌ Debug: Shape Q-target
│   q_target_shape = (5,)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:513
┌ Debug: Qpredselected:
│   q_pred_selected =
│    5-element Vector{Float32}:
│     -0.38199878
│     -1.0194466
│     -0.19484608
│     -0.22368892
│     -0.19233742
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:514
┌ Debug: Actionselectedincartesianindex
│   a_array =
│    5-element Vector{CartesianIndex{2}}:
│     CartesianIndex(-1, 0)
│     CartesianIndex(0, -1)
│     CartesianIndex(0, -1)
│     CartesianIndex(0, 1)
│     CartesianIndex(0, -1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:515
┌ Debug: States
│   states =
│    10×10×1×5 Array{Float32, 4}:
│    [:, :, 1, 1] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 2] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 3] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   1.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 4] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   1.0   1.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 5] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   1.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:516
┌ Debug: Next_states
│   next_states =
│    10×10×1×5 Array{Float32, 4}:
│    [:, :, 1, 1] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   1.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 2] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│      1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 3] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   1.0   1.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 4] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   1.0   1.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│    
│    [:, :, 1, 5] =
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   2.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   1.0   1.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  -1.0
│     -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0  -1.0
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:517
[ Info: Batch 1000 | Target network updated.
[ Info: Batch 1000 | Game reset due to loss.
┌ Info: ############################## END TRAINING
└ ###############################
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.31165484
│     -1.0059888
│     -0.26993728
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.39650282
│     -0.26158214
│     -0.22788441
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.36236435
│     -0.22389473
│     -0.18422201
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.30401325
│     -0.24304105
│     -0.22280669
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.38808298
│     -0.24753205
│     -0.23323777
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.43518424
│     -0.25677076
│     -0.23343834
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.48252377
│     -0.2454661
│     -0.27291608
│   max_idx = CartesianIndex(2, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.563364
│     -0.3248393
│     -0.45187408
│   max_idx = CartesianIndex(2, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.40554786
│     -0.55640566
│     -0.3247605
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.365432
│     -0.7353246
│     -0.23661229
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.3459446
│     -0.8928122
│     -0.21342927
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.31161228
│     -1.0077026
│     -0.26371443
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.33749247
│     -0.9843957
│     -0.3680418
│   max_idx = CartesianIndex(1, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.9117728
│     -0.27538103
│     -0.27948746
│   max_idx = CartesianIndex(2, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Debug: best action selected!
│   expected_rewards =
│    3×1 Matrix{Float32}:
│     -0.39650282
│     -0.26158214
│     -0.22788441
│   max_idx = CartesianIndex(3, 1)
└ @ Main /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/utils.jl:202
┌ Info: Saved animation to
└ /home/luca/Documents/arch/magistrale/thesis/Laplace-DQN-Snake-game/trainergifs/shorttraining8.gif
[ Info: Trainer state saved to short_training8
